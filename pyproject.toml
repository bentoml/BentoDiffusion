[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "onediffusion"
authors = [
    { name = "Shenyang Zhao", email = "larme@bentoml.com" },
    { name = "BentoML Team", email = "contact@bentoml.com" },
]
description = 'Onediffusion: REST API server for running any diffusion models - Stable Diffusion, Anything, ControlNet, Lora, Custom'
dynamic = ["version"]
keywords = [
    "MLOps",
    "AI",
    "BentoML",
    "Model Serving",
    "Model Deployment",
    "Generative AI",
    "Stable Diffusion",
    "PyTorch",
    "Diffusers",
    "Lora",
]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    # bentoml[io] includes pydantic, PIL, filetype, pandas and numpy
    # bentoml[grpc,grpc-reflection] include grpcio, grpcio-reflection
    "bentoml[io]>=1.1.2",
    "attrs>=23.1.0",
    "cattrs>=23.1.0",
    # diffusers
    "diffusers[torch]>=0.19.3",
    "transformers",
    # Accelerations
    "accelerate",
    # utilities
    "orjson",
    "inflection",
    "huggingface_hub",
    "pydantic",
    "safetensors",
    # tabulate for CLI with CJK support
    # >=0.9.0 for some bug fixes
    "tabulate[widechars]>=0.9.0",
]

[project.urls]
Chat = "https://l.bentoml.com/join-openllm-discord"
Documentation = "https://github.com/BentoML/OneDiffusion#readme"
Issues = "https://github.com/BentoML/OneDiffusion/issues"
Source = "https://github.com/BentoML/OneDiffusion"

[project.scripts]
onediffusion = "onediffusion.cli:cli"

[tool.hatch.version]
path = "src/onediffusion/__about__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.dev]
dependencies = ["ruff", "pyright", "hatch"]
detached = true

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]
[tool.hatch.envs.lint.scripts]
typing = "pyright {args:src/onediffusion tests} {args:src/onediffusion tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.tox
    | \.venv
    | _build
    | .build
    | bazel-*
    | build
    | venv
    | lib
    | dist
  )/
  | src/onediffusion/__about__.py
)
'''
target-version = ["py310"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["onediffusion", "bentoml", "diffusers"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["onediffusion", "tests"]
branch = true
parallel = true
omit = [
  "src/onediffusion/__about__.py",
]

[tool.coverage.paths]
onediffusion = ["src/onediffusion", "*/onediffusion/src/onediffusion"]
tests = ["tests", "*/onediffusion/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pyright]
analysis.useLibraryCodeForTypes = true
enableTypeIgnoreComments = true
include = ["src/", "tests/"]
pythonVersion = "3.10"
reportMissingImports = "none"
reportMissingModuleSource = "warning"
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
strictDictionaryInference = true
strictListInference = true
strictParameterNoneValue = true
strictSetInference = true
typeCheckingMode = "strict"
